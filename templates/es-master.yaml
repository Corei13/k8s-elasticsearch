apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-master
  labels:
    component: {{ template "fullname" . }}
    role: master
spec:
  replicas: {{ .Values.master.replicas }}
  template:
    metadata:
      labels:
        component: {{ template "fullname" . }}
        role: master
    spec:
      securityContext:
        fsGroup: 1000
      {{- if  .Values.master.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.master.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
    {{- if eq .Values.master.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: master
      {{- else if eq .Values.master.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: master
      {{- end }}
      containers:
      - name: es-master
        securityContext:
          privileged: false
          runAsUser: 1000
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.common.image.elasticsearch }}:{{ .Values.common.image.tag }}"
        args:
          - sh
          - -c
          - |
            if [ ! -z "${ES_PLUGINS_INSTALL}" ]; then
              OLDIFS=$IFS
              IFS=','
              for plugin in ${ES_PLUGINS_INSTALL}; do
                if ! bin/elasticsearch-plugin list | grep -qs ${plugin}; then
                  until bin/elasticsearch-plugin install --batch ${plugin}; do
                    echo "failed to install ${plugin}, retrying in 3s"
                    sleep 3
                  done
                fi
              done
              IFS=$OLDIFS
            fi
            bin/elasticsearch
        resources:
          requests:
            memory: {{ .Values.master.memory.request }}
            cpu: {{ .Values.master.cpu.request }}
          limits:
            memory: {{ .Values.master.memory.limit }}
            cpu: {{ .Values.master.cpu.limit }}
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.master.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: {{ template "fullname" . }}-storage
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: config
          mountPath: /usr/share/elasticsearch/config/jvm.options
          subPath: jvm.options
        - name: config
          mountPath: /usr/share/elasticsearch/config/log4j2.properties
          subPath: log4j2.properties
      volumes:
        - name: {{ template "fullname" . }}-storage
          emptyDir:
            medium: ""
        - name: config
          configMap:
            name: {{ template "fullname" . }}-es-config
            items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
            - key: jvm.options
              path: jvm.options
            - key: log4j2.properties
              path: log4j2.properties
