apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}-data
  labels:
    component: {{ template "fullname" . }}
    role: data
spec:
  serviceName: {{ template "fullname" . }}-data-svc
  replicas: {{ .Values.data.replicas }}
  template:
    metadata:
      labels:
        component: {{ template "fullname" . }}
        role: data
    spec:
      {{- if  .Values.data.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.data.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
    {{- if eq .Values.data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- else if eq .Values.data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- end }}
      containers:
      - name: es-data
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.common.image.repository }}:{{ .Values.common.image.tag }}"
        resources:
          requests:
            memory: {{ .Values.data.memory.request }}
            cpu: {{ .Values.data.cpu.request }}
          limits:
            memory: {{ .Values.data.memory.limit }}
            cpu: {{ .Values.data.cpu.limit }}
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.data.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: {{ template "fullname" . }}-storage
  volumeClaimTemplates:
  - metadata:
      name: {{ template "fullname" . }}-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ template "fullname" . }}-storage-class
      resources:
        requests:
          storage: 300Gi
