apiVersion: v1
kind: List
items:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: metricbeat-config
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
  data:
    metricbeat.yml: |-
      metricbeat.config.modules:
        # Mounted `metricbeat-daemonset-modules` configmap:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false

      processors:
        - add_cloud_metadata:

      output.elasticsearch:
        hosts: ${ELASTICSEARCH_URL}

      setup:
        kibana.host: ${KIBANA_URL}
        dashboards.enabled: true
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: metricbeat-daemonset-modules
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
  data:
    system.yml: |-
      - module: system
        period: 10s
        metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
          #- core
          #- diskio
          #- socket
        processes: ['.*']
        process.include_top_n:
          by_cpu: 5      # include top 5 processes by CPU
          by_memory: 5   # include top 5 processes by memory

      - module: system
        period: 1m
        metricsets:
          - filesystem
          - fsstat
        processors:
        - drop_event.when.regexp:
            system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
    kubernetes.yml: |-
      - module: kubernetes
        metricsets:
          - node
          - system
          - pod
          - container
          - volume
        period: 10s
        hosts: ["localhost:10255"]
  # Deploy a Metricbeat instance per node for node metrics retrieval
- kind: DaemonSet
  apiVersion: extensions/v1beta1
  metadata:
    name: metricbeat
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
  spec:
    updateStrategy:
      type: {{ .Values.metricbeat.updateStrategy }}
    template:
      metadata:
        labels:
          component: elasticsearch
          role: metricbeat
      spec:
        serviceAccountName: metricbeat
        terminationGracePeriodSeconds: 30
        hostNetwork: true
        dnsPolicy: ClusterFirstWithHostNet
        containers:
        - name: metricbeat
          image: "{{ .Values.common.image.metricbeat }}:{{ .Values.common.image.tag }}"
          args: [
            "-c", "/etc/metricbeat.yml",
            "-e",
            "-system.hostfs=/hostfs",
          ]
          env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch.{{ .Values.common.namespace.elasticsearch }}:9200
          - name: KIBANA_URL
            value: http://kibana.{{ .Values.common.namespace.elasticsearch }}:80
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          securityContext:
            runAsUser: 0
          resources:
            requests:
              memory: {{ .Values.metricbeat.memory.request }}
              cpu: {{ .Values.metricbeat.cpu.request }}
            limits:
              memory: {{ .Values.metricbeat.memory.limit }}
              cpu: {{ .Values.metricbeat.cpu.limit }}
          volumeMounts:
          - name: config
            mountPath: /etc/metricbeat.yml
            readOnly: true
            subPath: metricbeat.yml
          - name: modules
            mountPath: /usr/share/metricbeat/modules.d
            readOnly: true
          - name: dockersock
            mountPath: /var/run/docker.sock
          - name: proc
            mountPath: /hostfs/proc
            readOnly: true
          - name: cgroup
            mountPath: /hostfs/sys/fs/cgroup
            readOnly: true
        volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: config
          configMap:
            defaultMode: 0600
            name: metricbeat-config
        - name: modules
          configMap:
            defaultMode: 0600
            name: metricbeat-daemonset-modules
        # We set an `emptyDir` here to ensure the manifest will deploy correctly.
        # It's recommended to change this to a `hostPath` folder, to ensure internal data
        # files survive pod changes (ie: version upgrade)
        - name: data
          emptyDir: {}
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: metricbeat-deployment-modules
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
  data:
    # This module requires `kube-state-metrics` up and running under `{{ .Values.common.namespace.metricbeat }}` namespace
    kubernetes.yml: |-
      - module: kubernetes
        metricsets:
          - state_node
          - state_deployment
          - state_replicaset
          - state_pod
          - state_container
          # Uncomment this to get k8s events:
          #- event
        period: 10s
        hosts: ["kube-state-metrics:8080"]
  # Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
- kind: Deployment
  apiVersion: apps/v1beta1
  metadata:
    name: metricbeat
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
  spec:
    template:
      metadata:
        labels:
          component: elasticsearch
          role: metricbeat
      spec:
        serviceAccountName: metricbeat
        containers:
        - name: metricbeat
          image: "{{ .Values.common.image.metricbeat }}:{{ .Values.common.image.tag }}"
          args: [
            "-c", "/etc/metricbeat.yml",
            "-e",
          ]
          env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch.{{ .Values.common.namespace.elasticsearch }}:9200
          - name: KIBANA_URL
            value: http://kibana.{{ .Values.common.namespace.elasticsearch }}:80
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          securityContext:
            runAsUser: 0
          resources:
            requests:
              memory: {{ .Values.metricbeat.memory.request }}
              cpu: {{ .Values.metricbeat.cpu.request }}
            limits:
              memory: {{ .Values.metricbeat.memory.limit }}
              cpu: {{ .Values.metricbeat.cpu.limit }}
          volumeMounts:
          - name: config
            mountPath: /etc/metricbeat.yml
            readOnly: true
            subPath: metricbeat.yml
          - name: modules
            mountPath: /usr/share/metricbeat/modules.d
            readOnly: true
        volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: metricbeat-config
        - name: modules
          configMap:
            defaultMode: 0600
            name: metricbeat-deployment-modules
- kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1beta1
  metadata:
    name: metricbeat
  subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: {{ .Values.common.namespace.metricbeat }}
  roleRef:
    kind: ClusterRole
    name: metricbeat
    apiGroup: rbac.authorization.k8s.io
- kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1beta1
  metadata:
    name: metricbeat
    labels:
      component: elasticsearch
      role: metricbeat
  rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
    - namespaces
    - events
    - pods
    verbs:
    - get
    - watch
    - list
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: metricbeat
    namespace: {{ .Values.common.namespace.metricbeat }}
    labels:
      component: elasticsearch
      role: metricbeat
